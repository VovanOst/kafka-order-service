version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    ports:
      - "9092:9092"

  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: orders
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    ports:
      - "8081:8080"

  producer:
    build:
      context: .
      dockerfile: Dockerfile.producer
    depends_on:
      - postgres
      - kafka
    working_dir: /app
    environment:
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/orders?sslmode=disable
      KAFKA_BROKERS: kafka:9092
      KAFKA_TOPIC: kafka.orders
      SERVER_PORT: "8080"
    ports:
      - "8080:8080"

  consumer:
    build:
      context: .
      dockerfile: Dockerfile.consumer
    depends_on:
      - postgres
      - kafka
    working_dir: /app
    environment:
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/orders?sslmode=disable
      KAFKA_BROKERS: kafka:9092
      KAFKA_TOPIC: kafka.orders
      KAFKA_GROUP_ID: order-consumer-group
    command: ["./consumer"]

volumes:
  postgres_data:
